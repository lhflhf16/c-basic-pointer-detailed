#define _CRT_SECURE_NO_WARNINGS 1

/*思路：
char* strstr（char* str1，const char* str2）在字符串str1中寻找字符串str2
第一次出现的位置不比较str2中的'\0',找到后返回该处地址，找不到返回NULL*/
#include<stdio.h>

//比较函数
//从str1+1和str2+1开始依次向后比较两字符串内容相同有不同则返回0，全相同则返回1
int cmp(char* str1, const char* str2,int sum)
{
	int i = 0;
	for (i = 1; i < sum; i++)
	{
		if (*(str1 + i) != *(str2 + i))
		{
			return 0;
		}
	}
	return 1;
}

char* my_strstr(char* str1, const char* str2)
{
	const char* star = str2;
	const char* end = str2;
	while (*end != '\0')
	{
		end++;
	}
	int sum = end - star;//得到str2的字符串长度
	while (*(str1+sum-1) != '\0')//当前str1地址处的字符串长度小于sum则结束循环说明找不到返回NULL
	{
		if (*str1 != *str2)//当str1指向的字符与str2字符串的首字符不同，则str1++判断下一个
		{
			str1++;
		}
		else
		{
			int ret = cmp(str1, str2,sum);//当str1指向字符的与str2首字符相同，则进入比较函数
			if (ret == 1)//返回ret为1说明str1地址就是字符串str2第一次出现在str1字符串中的位置
			{
				return str1;
			}
			else//返回为0则str1继续向后寻找
			{
				str1++;
			}
		}
	}
	return NULL;
}

int main()
{
	char arr[] = "This is a simple string";
	char* ret=my_strstr(arr, "simple");
	if (ret == NULL)
	{
		printf("找不到\n");
	}
	else
	{
		printf("%s\n", ret);
	}
	return 0;
}
