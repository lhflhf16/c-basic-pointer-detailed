#include<stdio.h>
#include<string.h>
#include<assert.h>

//判断arr2是否由arr1左旋而来，abcdefabcdef包含了所有arr1左旋的情况
int is_left_move(char* arr1, char* arr2)
{
	assert(arr1);
	assert(arr2);
	//arr1长度与arr2是否相同(不然arr1=aa;arr2=a等情况也会返回1)
	if (strlen(arr1) != strlen(arr2))
	{
		return 0;
	}
	//先创造出abcdefabcdef字符串，使用strcat库函数
	//但是strcat不能自己追加自己，所以这里使用strncat，原因见笔记第五章P19；
	int len = strlen(arr1);
	strncat(arr1, arr1, len);
	//在新字符串中寻找arr2；可以使用strstr库函数
	//strstr在字符串中寻找字串，找到返回该处地址，找不到返回NULL
	char* ret = strstr(arr1, arr2);
	if (ret == NULL)
	{
		return 0;
	}
	else
	{
		return 1;
	}
}
int main()
{
	char arr1[30] = "aaaa";
	char arr2[] = "aaaa";
	int ret = is_left_move(arr1, arr2);
	if (ret == 1)
	{
		printf("YES\n");
	}
	else
	{
		printf("NO\n");
	}
	return 0;
}
